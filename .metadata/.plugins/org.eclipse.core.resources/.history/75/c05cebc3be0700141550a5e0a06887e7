package com.example.babiesvsaliens_v2;



import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.Toast;

public class MainActivity extends Activity implements OnTouchListener {
	
	Jogo jogo;
	
	float largura, altura;
	float x , y;
	enum Sentido {CIMA, BAIXO, PARADO}
	Sentido sentido = Sentido.PARADO;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		x = y = 0;
		jogo = new Jogo(this);
		jogo.setOnTouchListener(this);
		
		setContentView(jogo);
		

	}

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		jogo.pause();
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		jogo.resume();
	}
	
	public class Jogo extends SurfaceView implements Runnable {
		
		Thread t = null;
		SurfaceHolder holder;
		
		float move;
		boolean play = false;
		
		Bitmap player;
		Bitmap background;
		Bitmap scaled;

		public Jogo(Context context) {
			super(context);
			
			holder = getHolder();
			player = BitmapFactory.decodeResource(getResources(), R.drawable.player);
			background = BitmapFactory.decodeResource(getResources(), R.drawable.back); 
			float scale = (float)background.getHeight()/(float)getHeight();
			int newWidth = Math.round(background.getWidth()/scale);
			int newHeight = Math.round(background.getHeight()/scale);
			scaled = Bitmap.createScaledBitmap(background, newWidth, newHeight, true);
			
		}
		

		@Override
		public void run() {
			while(play){
				if(!holder.getSurface().isValid()){
					continue;
				}
				
				
				if(sentido == Sentido.CIMA){
						y += 15;
				}else if(sentido == Sentido.BAIXO){
						y -=15;
				}else if (sentido == Sentido.PARADO){
					move = 0;
				}
				
				Matrix player_matrix = new Matrix();
				
				player_matrix.setTranslate(x, y);
				
				Matrix background_matrix = new Matrix();
				
				
			   
				
				background_matrix.setTranslate(0, 0);
			    Canvas back = holder.lockCanvas();
			    largura = back.getWidth();
			    altura = back.getHeight();
			    
				back.drawBitmap(scaled,0,0, null);
				back.drawBitmap(player,player_matrix, null);
				holder.unlockCanvasAndPost(back);
			}
		}
		
		public void pause(){
			play = false;
			while (true) {
				
				try {
					t.join();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				break;
			}
			t = null;
		}
		
		public void resume(){
			play = true;
			t = new Thread(this);
			t.start();
		}

	}


	@Override
	public boolean onTouch(View v, MotionEvent e) {
		
		switch (e.getAction()) {
		case MotionEvent.ACTION_DOWN:
			if(e.getY() > (altura/2) ){
				sentido = Sentido.CIMA;
			}else if(e.getY() < (altura/2) ){
				sentido = Sentido.BAIXO;
			}
			break;
		case MotionEvent.ACTION_UP:
			sentido = Sentido.PARADO;
			break;
		case MotionEvent.ACTION_MOVE:
			if(e.getY() > (altura/2) ){
				sentido = Sentido.CIMA;
			}else if(e.getY() < (altura/2) ){
				sentido = Sentido.BAIXO;
			}
			break;	
		default:
			sentido = Sentido.PARADO;
			break;
		}
			
		return true;
	}

	

}
